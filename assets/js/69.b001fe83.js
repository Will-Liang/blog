(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{468:function(e,t,a){"use strict";a.r(t);var _=a(2),r=Object(_.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"_1-selenium"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-selenium"}},[e._v("#")]),e._v(" 1. Selenium")]),e._v(" "),t("p",[e._v("Selenium是一个Web的自动化测试工具，最初是为网站自动化测试而开发的，类型像我们玩游戏用的按键精灵，可以按指定的命令自动操作，不同是Selenium 可以直接运行在浏览器上，它支持所有主流的浏览器（包括PhantomJS这些无界面的浏览器）。")]),e._v(" "),t("p",[e._v("Selenium 可以根据我们的指令，让浏览器自动加载页面，获取需要的数据，甚至页面截屏，或者判断网站上某些动作是否发生。")]),e._v(" "),t("p",[e._v("Selenium 自己不带浏览器，不支持浏览器的功能，它需要与第三方浏览器结合在一起才能使用。但是我们有时候需要让它内嵌在代码中运行，所以我们可以用一个叫 PhantomJS 的工具代替真实的浏览器。")]),e._v(" "),t("p",[e._v("PyPI网站下载 Selenium库 https://pypi.python.org/simple/selenium ，也可以用 第三方管理器")]),e._v(" "),t("p",[e._v("pip用命令安装："),t("code",[e._v("pip install selenium")])]),e._v(" "),t("p",[e._v("Selenium 官方参考文档：http://selenium-python.readthedocs.io/index.html")]),e._v(" "),t("h2",{attrs:{id:"_2-phantomjs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-phantomjs"}},[e._v("#")]),e._v(" 2. PhantomJS")]),e._v(" "),t("p",[e._v("PhantomJS 是一个基于Webkit的“无界面”(headless)浏览器，它会把网站加载到内存并执行页面上的 JavaScript，因为不会展示图形界面，所以运行起来比完整的浏览器要高效")]),e._v(" "),t("p",[e._v("如果我们把 Selenium 和 PhantomJS 结合在一起，就可以运行一个非常强大的网络爬虫了，这个爬虫可以处理 JavaScrip、Cookie、headers，以及任何我们真实用户需要做的事情")]),e._v(" "),t("h3",{attrs:{id:"_2-1注意-phantomjs-python2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1注意-phantomjs-python2"}},[e._v("#")]),e._v(" 2.1注意：PhantomJS（python2）")]),e._v(" "),t("p",[e._v("只能从它的官方网站http://phantomjs.org/download.html) 下载。 因为 PhantomJS 是一个功能完善(虽然无界面)的浏览器而非一个 Python 库，所以它不需要像 Python 的其他库一样安装，但我们可以通过Selenium调用PhantomJS来直接使用。")]),e._v(" "),t("p",[e._v("PhantomJS 官方参考文档：http://phantomjs.org/documentation")]),e._v(" "),t("h3",{attrs:{id:"_2-2-python3使用的浏览器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-python3使用的浏览器"}},[e._v("#")]),e._v(" 2.2 python3使用的浏览器")]),e._v(" "),t("p",[e._v("随着Python3的普及，Selenium3也跟上了行程。而Selenium3最大的变化是去掉了Selenium RC，另外就是Webdriver从各自浏览器中脱离，必须单独下载")]),e._v(" "),t("h4",{attrs:{id:"_2-1-1-安装firefox-geckodriver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-安装firefox-geckodriver"}},[e._v("#")]),e._v(" 2.1.1 安装Firefox geckodriver")]),e._v(" "),t("p",[e._v("安装firefox最新版本，添加Firefox可执行程序到系统环境变量。记得关闭firefox的自动更新")]),e._v(" "),t("p",[e._v("firefox下载地下：https://github.com/mozilla/geckodriver/releases")]),e._v(" "),t("p",[e._v("将下载的geckodriver.exe 放到path路径下 D:\\Python\\Python36\\")]),e._v(" "),t("h4",{attrs:{id:"_2-1-2-安装chromedriver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-安装chromedriver"}},[e._v("#")]),e._v(" 2.1.2 安装ChromeDriver")]),e._v(" "),t("p",[e._v("http://chromedriver.storage.googleapis.com/index.html")]),e._v(" "),t("blockquote",[t("p",[e._v("注意版本号要对应")])]),e._v(" "),t("blockquote",[t("p",[e._v("下载下来的文件解压到"),t("code",[e._v("Python36\\Scripts")])])]),e._v(" "),t("blockquote",[t("p",[e._v("chrome59版本以后可以变成无头的浏览器，加以下参数")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("options = webdriver.ChromeOptions()\noptions.add_argument('--headless')\nchrome = webdriver.Chrome(chrome_options=options)\nchrome.get(\"http://ww.baidu.com\")\n")])])]),t("h2",{attrs:{id:"_3-使用方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用方式"}},[e._v("#")]),e._v(" 3. 使用方式")]),e._v(" "),t("p",[e._v("Selenium 库里有个叫 WebDriver 的 API。WebDriver 有点儿像可以加载网站的浏览器，但是它也可以像 BeautifulSoup 或者其他 Selector 对象一样用来查找页面元素，与页面上的元素进行交互 (发送文本、点击等)，以及执行其他动作来运行网络爬虫")]),e._v(" "),t("h3",{attrs:{id:"_3-1-简单例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-简单例子"}},[e._v("#")]),e._v(" 3.1 简单例子")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# 导入 webdriver\nfrom selenium import webdriver\n\n# 要想调用键盘按键操作需要引入keys包\nfrom selenium.webdriver.common.keys import Keys\n\n# 调用环境变量指定的PhantomJS浏览器创建浏览器对象\ndriver = webdriver.PhantomJS()\n\n# 如果没有在环境变量指定PhantomJS位置\n# driver = webdriver.PhantomJS(executable_path="./phantomjs"))\n\n# get方法会一直等到页面被完全加载，然后才会继续程序，通常测试会在这里选择 time.sleep(2)\ndriver.get("http://www.baidu.com/")\n\n# 获取页面名为 wrapper的id标签的文本内容\ndata = driver.find_element_by_id("wrapper").text\n\n# 打印数据内容\nprint(data)\n\n# 打印页面标题 "百度一下，你就知道"\nprint（driver.title）\n\n# 生成当前页面快照并保存\ndriver.save_screenshot("baidu.png")\n\n# id="kw"是百度搜索输入框，输入字符串"长城"\ndriver.find_element_by_id("kw").send_keys("尚学堂")\n\n# id="su"是百度搜索按钮，click() 是模拟点击\ndriver.find_element_by_id("su").click()\n\n# 获取新的页面快照\ndriver.save_screenshot("尚学.png")\n\n# 打印网页渲染后的源代码\nprint(driver.page_source)\n\n# 获取当前页面Cookie\nprint(driver.get_cookies())\n\n# ctrl+a 全选输入框内容\ndriver.find_element_by_id("kw").send_keys(Keys.CONTROL,\'a\')\n\n# ctrl+x 剪切输入框内容\ndriver.find_element_by_id("kw").send_keys(Keys.CONTROL,\'x\')\n\n# 输入框重新输入内容\ndriver.find_element_by_id("kw").send_keys("python爬虫")\n\n# 模拟Enter回车键\ndriver.find_element_by_id("su").send_keys(Keys.RETURN)\n\n# 清除输入框内容\ndriver.find_element_by_id("kw").clear()\n\n# 生成新的页面快照\ndriver.save_screenshot("python爬虫.png")\n\n# 获取当前url\nprint(driver.current_url)\n\n# 关闭当前页面，如果只有一个页面，会关闭浏览器\n# driver.close()\n\n# 关闭浏览器\ndriver.quit()\n')])])]),t("h2",{attrs:{id:"_4-页面操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-页面操作"}},[e._v("#")]),e._v(" 4. 页面操作")]),e._v(" "),t("blockquote",[t("p",[e._v("仅仅抓取页面没有多大卵用，我们真正要做的是做到和页面交互，比如点击，输入等等。那么前提就是要找到页面中的元素。WebDriver提供了各种方法来寻找元素。例如下面有一个表单输入框")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<input type="text" name="passwd" id="passwd-id" />\n\n')])])]),t("h3",{attrs:{id:"_4-1-获取"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-获取"}},[e._v("#")]),e._v(" 4.1 "),t("strong",[e._v("获取")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('element = driver.find_element_by_id("passwd-id")\nelement = driver.find_element_by_name("passwd")\nelement = driver.find_elements_by_tag_name("input")\nelement = driver.find_element_by_xpath("//input[@id=\'passwd-id\']")\n')])])]),t("p",[t("strong",[e._v("注意：")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("文本必须完全匹配才可以，所以这并不是一个很好的匹配方式")])]),e._v(" "),t("li",[t("p",[e._v("在用 xpath 的时候还需要注意的如果有多个元素匹配了 xpath，它只会返回第一个匹配的元素。如果没有找到，那么会抛出 NoSuchElementException 的异常")])])]),e._v(" "),t("h3",{attrs:{id:"_4-2-输入内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-输入内容"}},[e._v("#")]),e._v(" 4.2 输入内容")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('element.send_keys("some text")\n')])])]),t("h3",{attrs:{id:"_4-3-模拟点击某个按键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-模拟点击某个按键"}},[e._v("#")]),e._v(" 4.3 模拟点击某个按键")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('element.send_keys("and some", Keys.ARROW_DOWN)\n')])])]),t("h3",{attrs:{id:"_4-4-清空文本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-清空文本"}},[e._v("#")]),e._v(" 4.4 清空文本")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("element.clear()\n")])])]),t("h3",{attrs:{id:"_4-5-元素拖拽"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-元素拖拽"}},[e._v("#")]),e._v(" 4.5 元素拖拽")]),e._v(" "),t("blockquote",[t("p",[e._v("要完成元素的拖拽，首先你需要指定被拖动的元素和拖动目标元素，然后利用 ActionChains 类来实现")])]),e._v(" "),t("p",[e._v("以下实现元素从 source 拖动到 target 的操作")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('element = driver.find_element_by_name("source")\ntarget = driver.find_element_by_name("target")\n \nfrom selenium.webdriver import ActionChains\naction_chains = ActionChains(driver)\naction_chains.drag_and_drop(element, target).perform()\n')])])]),t("h3",{attrs:{id:"_4-6-历史记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-历史记录"}},[e._v("#")]),e._v(" 4.6 历史记录")]),e._v(" "),t("blockquote",[t("p",[e._v("操作页面的前进和后退功能")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("driver.forward()\ndriver.back()\n")])])]),t("h2",{attrs:{id:"_5-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-api"}},[e._v("#")]),e._v(" 5. API")]),e._v(" "),t("h3",{attrs:{id:"_5-1-单个元素选取"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-单个元素选取"}},[e._v("#")]),e._v(" 5.1 单个元素选取")]),e._v(" "),t("ul",[t("li",[e._v("find_element_by_id")]),e._v(" "),t("li",[e._v("find_element_by_name")]),e._v(" "),t("li",[e._v("find_element_by_xpath")]),e._v(" "),t("li",[e._v("find_element_by_link_text")]),e._v(" "),t("li",[e._v("find_element_by_partial_link_text")]),e._v(" "),t("li",[e._v("find_element_by_tag_name")]),e._v(" "),t("li",[e._v("find_element_by_class_name")]),e._v(" "),t("li",[e._v("find_element_by_css_selector")])]),e._v(" "),t("h3",{attrs:{id:"_5-2-多个元素选取"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-多个元素选取"}},[e._v("#")]),e._v(" 5.2 多个元素选取")]),e._v(" "),t("ul",[t("li",[e._v("find_elements_by_name")]),e._v(" "),t("li",[e._v("find_elements_by_xpath")]),e._v(" "),t("li",[e._v("find_elements_by_link_text")]),e._v(" "),t("li",[e._v("find_elements_by_partial_link_text")]),e._v(" "),t("li",[e._v("find_elements_by_tag_name")]),e._v(" "),t("li",[e._v("find_elements_by_class_name")]),e._v(" "),t("li",[e._v("find_elements_by_css_selector")])]),e._v(" "),t("h3",{attrs:{id:"_5-3-利用-by-类来确定哪种选择方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-利用-by-类来确定哪种选择方式"}},[e._v("#")]),e._v(" 5.3 利用 By 类来确定哪种选择方式")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("from selenium.webdriver.common.by import By\n \ndriver.find_element(By.XPATH, '//button[text()=\"Some text\"]')\ndriver.find_elements(By.XPATH, '//button')\n")])])]),t("p",[e._v("By 类的一些属性如下")]),e._v(" "),t("ul",[t("li",[e._v('ID = "id"')]),e._v(" "),t("li",[e._v('XPATH = "xpath"')]),e._v(" "),t("li",[e._v('LINK_TEXT = "link text"')]),e._v(" "),t("li",[e._v('PARTIAL_LINK_TEXT = "partial link text"')]),e._v(" "),t("li",[e._v('NAME = "name"')]),e._v(" "),t("li",[e._v('TAG_NAME = "tag name"')]),e._v(" "),t("li",[e._v('CLASS_NAME = "class name"')]),e._v(" "),t("li",[e._v('CSS_SELECTOR = "css selector"')])]),e._v(" "),t("h2",{attrs:{id:"_6-等待"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-等待"}},[e._v("#")]),e._v(" 6. 等待")]),e._v(" "),t("h3",{attrs:{id:"_6-1-隐式等待"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-隐式等待"}},[e._v("#")]),e._v(" 6.1 隐式等待")]),e._v(" "),t("blockquote",[t("p",[e._v("到了一定的时间发现元素还没有加载，则继续等待我们指定的时间，如果超过了我们指定的时间还没有加载就会抛出异常，如果没有需要等待的时候就已经加载完毕就会立即执行")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("from selenium import webdriver\nurl = 'https://www.guazi.com/nj/buy/'\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.implicitly_wait(100)\nprint(driver.find_element_by_class_name('next'))\nprint(driver.page_source)\n")])])]),t("h3",{attrs:{id:"_6-2-显示等待"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-显示等待"}},[e._v("#")]),e._v(" 6.2 显示等待")]),e._v(" "),t("blockquote",[t("p",[e._v("指定一个等待条件，并且指定一个最长等待时间，会在这个时间内进行判断是否满足等待条件，如果成立就会立即返回，如果不成立，就会一直等待，直到等待你指定的最长等待时间，如果还是不满足，就会抛出异常，如果满足了就会正常返回")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    url = 'https://www.guazi.com/nj/buy/'\n    driver = webdriver.Chrome()\n    driver.get(url)\n    wait = WebDriverWait(driver,10)\n    wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'next')))\n    print(driver.page_source)\n")])])]),t("ul",[t("li",[e._v("presence_of_element_located\n"),t("ul",[t("li",[e._v("元素加载出，传入定位元组，如(By.ID, 'p')")])])]),e._v(" "),t("li",[e._v("presence_of_all_elements_located\n"),t("ul",[t("li",[e._v("所有元素加载出")])])]),e._v(" "),t("li",[e._v("element_to_be_clickable\n"),t("ul",[t("li",[e._v("元素可点击")])])]),e._v(" "),t("li",[e._v("element_located_to_be_selected\n"),t("ul",[t("li",[e._v("元素可选择，传入定位元组")])])])]),e._v(" "),t("h3",{attrs:{id:"_6-3-强制等待"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-强制等待"}},[e._v("#")]),e._v(" 6.3 强制等待")]),e._v(" "),t("blockquote",[t("p",[e._v("使用 time.sleep")])])])}),[],!1,null,null,null);t.default=r.exports}}]);