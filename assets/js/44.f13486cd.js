(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{444:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"安装环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装环境"}},[t._v("#")]),t._v(" 安装环境")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pip install pymongo\n")])])]),s("h2",{attrs:{id:"使用样例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用样例"}},[t._v("#")]),t._v(" 使用样例")]),t._v(" "),s("h3",{attrs:{id:"_1-引入包pymongo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入包pymongo"}},[t._v("#")]),t._v(" 1. 引入包pymongo")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import pymongo\n")])])]),s("h3",{attrs:{id:"_2-连接-创建客户端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-连接-创建客户端"}},[t._v("#")]),t._v(" 2. 连接，创建客户端")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("client = pymongo.MongoClient(\"localhost\", 27017)\nclient = pymongo.MongoClient('mongodb://localhost:27017/')\n")])])]),s("h3",{attrs:{id:"_3-获得数据库test1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-获得数据库test1"}},[t._v("#")]),t._v(" 3. 获得数据库test1")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db = client.test1\ndb = client['test']\n")])])]),s("h3",{attrs:{id:"_4-获得集合movie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-获得集合movie"}},[t._v("#")]),t._v(" 4. 获得集合movie")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("collection = db.movie\ncollection = db['movie']\n")])])]),s("h3",{attrs:{id:"_5-添加数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-添加数据"}},[t._v("#")]),t._v(" 5. 添加数据")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#增加一条\nm1={name:'300集',actor:'高总',level:10}\nm1_id = movie.insert_one(s1).inserted_id\n#增加多条\nmids = movie.insert_many([movie1,movie2])\n")])])]),s("p",[s("strong",[t._v("注意")]),t._v(" ：原insert方法也可以实现上面的功能，但是在PyMongo 3.x的版本已经不推荐使用了")]),t._v(" "),s("h3",{attrs:{id:"_6-查找数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-查找数据"}},[t._v("#")]),t._v(" 6. 查找数据")]),t._v(" "),s("ul",[s("li",[t._v("find() 返回一个生成器对象")]),t._v(" "),s("li",[t._v("find_one() 返回一条数据")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("result = movie.find_one()\nresult = movie.find_one({'name':'300集'})\nresult = movie.find_one({'_id':OjectId('5932a80115c2606a59e8a049')})\nresult = movie.find_one({level:{$gt:1}})\nresults = movie.find()\n")])])]),s("p",[s("strong",[t._v("比较符号")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("符号")]),t._v(" "),s("th",[t._v("含义")]),t._v(" "),s("th",[t._v("示例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("$lt")]),t._v(" "),s("td",[t._v("小于")]),t._v(" "),s("td",[t._v("{'age': {'$lt': 20}}")])]),t._v(" "),s("tr",[s("td",[t._v("$gt")]),t._v(" "),s("td",[t._v("大于")]),t._v(" "),s("td",[t._v("{'age': {'$gt': 20}}")])]),t._v(" "),s("tr",[s("td",[t._v("$lte")]),t._v(" "),s("td",[t._v("小于等于")]),t._v(" "),s("td",[t._v("{'age': {'$lte': 20}}")])]),t._v(" "),s("tr",[s("td",[t._v("$gte")]),t._v(" "),s("td",[t._v("大于等于")]),t._v(" "),s("td",[t._v("{'age': {'$gte': 20}}")])]),t._v(" "),s("tr",[s("td",[t._v("$ne")]),t._v(" "),s("td",[t._v("不等于")]),t._v(" "),s("td",[t._v("{'age': {'$ne': 20}}")])]),t._v(" "),s("tr",[s("td",[t._v("$in")]),t._v(" "),s("td",[t._v("在范围内")]),t._v(" "),s("td",[t._v("{'age': {'$in': [20, 23]}}")])]),t._v(" "),s("tr",[s("td",[t._v("$nin")]),t._v(" "),s("td",[t._v("不在范围内")]),t._v(" "),s("td",[t._v("{'age': {'$nin': [20, 23]}}")])])])]),t._v(" "),s("p",[s("strong",[t._v("功能符号")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("符号")]),t._v(" "),s("th",[t._v("含义")]),t._v(" "),s("th",[t._v("示例")]),t._v(" "),s("th",[t._v("示例含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("$regex")]),t._v(" "),s("td",[t._v("匹配正则表达式")]),t._v(" "),s("td",[t._v("{'name': {'$regex': '^M.*'}}")]),t._v(" "),s("td",[t._v("name以M开头")])]),t._v(" "),s("tr",[s("td",[t._v("$exists")]),t._v(" "),s("td",[t._v("属性是否存在")]),t._v(" "),s("td",[t._v("{'name': {'$exists': True}}")]),t._v(" "),s("td",[t._v("name属性存在")])]),t._v(" "),s("tr",[s("td",[t._v("$type")]),t._v(" "),s("td",[t._v("类型判断")]),t._v(" "),s("td",[t._v("{'age': {'$type': 'int'}}")]),t._v(" "),s("td",[t._v("age的类型为int")])]),t._v(" "),s("tr",[s("td",[t._v("$mod")]),t._v(" "),s("td",[t._v("数字模操作")]),t._v(" "),s("td",[t._v("{'age': {'$mod': [5, 0]}}")]),t._v(" "),s("td",[t._v("年龄模5余0")])]),t._v(" "),s("tr",[s("td",[t._v("$text")]),t._v(" "),s("td",[t._v("文本查询")]),t._v(" "),s("td",[t._v("{'$text': {'$search': 'Mike'}}")]),t._v(" "),s("td",[t._v("text类型的属性中包含Mike字符串")])]),t._v(" "),s("tr",[s("td",[t._v("$where")]),t._v(" "),s("td",[t._v("高级条件查询")]),t._v(" "),s("td",[t._v("{'$where': 'obj.fans_count == obj.follows_count'}")]),t._v(" "),s("td",[t._v("自身粉丝数等于关注数")])])])]),t._v(" "),s("h3",{attrs:{id:"_7-获取文档个数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-获取文档个数"}},[t._v("#")]),t._v(" 7. 获取文档个数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("count = movie.count()\ncount = collection.find({'level': 10}).count()\n")])])]),s("h3",{attrs:{id:"_8-排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-排序"}},[t._v("#")]),t._v(" 8. 排序")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("results = collection.find().sort('name', pymongo.ASCENDING)\n\n")])])]),s("h3",{attrs:{id:"_9-偏移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-偏移"}},[t._v("#")]),t._v(" 9. 偏移")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("collection.find().sort('name', pymongo.ASCENDING).skip(2).limit(2)\n")])])]),s("h3",{attrs:{id:"_10-更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-更新"}},[t._v("#")]),t._v(" 10. 更新")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("condition = {'name': '300集'}\nmovie = collection.find_one(condition)\nmovie['level'] = 8\nresult = collection.update_one(condition, movie)\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("result = collection.update_many(condition, {'$set': movie})\n")])])]),s("p",[s("strong",[t._v("注意：")]),t._v(" 也可以实现上面的功能，但是在PyMongo 3.x的版本已经不推荐使用了")]),t._v(" "),s("h3",{attrs:{id:"_11-删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-删除"}},[t._v("#")]),t._v(" 11. 删除")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("result = collection.remove({'name': '300集'}) #符合条件的所有数据均会被删除\nresult = collection.delete_one({'name': '300集'})\nresult = collection.delete_many({'age': {'$lt': 25}})\n")])])]),s("h2",{attrs:{id:"例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pymongo 版本 3.12.3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" pymongo\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接数据库")]),t._v("\nclient "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pymongo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MongoClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择实例")]),t._v("\nperson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("person\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择集合")]),t._v("\nstudent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("student\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 操作数据")]),t._v("\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" student"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for r in result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     print(r)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(result.next())")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(result.next())")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(result.next())")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 过滤条件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# result = student.find({"country":"蜀国"})')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for r in result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     print(r)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 排序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# result = student.find().sort("age", pymongo.DESCENDING)')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# result = student.find().sort("age", pymongo.ASCENDING)')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for r in result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     print(r)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分页")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# result = student.find().limit(6).skip(6)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for r in result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     print(r)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 已经废除 count()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# result = student.find().count()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# result = student.estimated_document_count()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(result)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 增加数据")]),t._v("\ndata "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小乔"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nstudent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("insert_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# student.remove(data)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# data = {"name": "小乔"}')]),t._v("\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" student"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"country"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"蜀国"')]),t._v("\nstudent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$set"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);