(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{418:function(v,_,t){"use strict";t.r(_);var l=t(2),a=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"原码-补码-反码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#原码-补码-反码"}},[v._v("#")]),v._v(" 原码，补码，反码")]),v._v(" "),_("p",[v._v("对于有符号的而言：")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("二进制的最高位是符号位：0表示正数，1表示负数")])]),v._v(" "),_("li",[_("p",[v._v("正数的原码，反码，补码都一样（三码合一）")])]),v._v(" "),_("li",[_("p",[v._v("负数的反码=它的原码符号位不变，其他位取反（0->1, 1->0）")])]),v._v(" "),_("li",[_("p",[v._v("负数的补码=它的反码 +1，负数的反码=负数的补码 -1")])]),v._v(" "),_("li",[_("p",[v._v("0的反码，补码都是0")])]),v._v(" "),_("li",[_("p",[v._v("Java没有无符号数，换言之，java中的数都是有符号的")])]),v._v(" "),_("li",[_("p",[v._v("在计算机运算的时候，都是以补码的方式来运算的")])]),v._v(" "),_("li",[_("p",[v._v("当我们看运算结果的时候，要看他的原码（！！！）")])])]),v._v(" "),_("h2",{attrs:{id:"位运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[v._v("#")]),v._v(" 位运算符")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("算术右移 "),_("code",[v._v(">>")]),v._v("：低位溢出，符号位不变，并用符号位补溢出的高位")])]),v._v(" "),_("li",[_("p",[v._v("算术左移"),_("code",[v._v("<<")]),v._v("：符号位不变，低位补0")])]),v._v(" "),_("li",[_("p",[_("code",[v._v(">>>")]),v._v("逻辑右移也叫无符号右移，运算规则是：低位溢出，高位补0")])]),v._v(" "),_("li",[_("p",[v._v("特别说明：没有 "),_("code",[v._v("<<<")]),v._v("符号")])])])])}),[],!1,null,null,null);_.default=a.exports}}]);