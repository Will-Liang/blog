(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{445:function(o,_,v){"use strict";v.r(_);var n=v(2),t=Object(n.a)({},(function(){var o=this,_=o._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[_("h2",{attrs:{id:"_1-mongodb介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-mongodb介绍"}},[o._v("#")]),o._v(" 1. MongoDB介绍")]),o._v(" "),_("p",[o._v("MongoDB 是一个高性能，开源，无模式的文档型数据库，是当前noSql数据库产品中最热门的一种。它在许多场景下用于替代传统的关系型数据库或键值对存储方式，MongoDB是用C++开发")]),o._v(" "),_("h2",{attrs:{id:"_2-为什么要用-nosql"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么要用-nosql"}},[o._v("#")]),o._v(" 2. 为什么要用 NoSQL")]),o._v(" "),_("h3",{attrs:{id:"_2-1-nosql-简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-nosql-简介"}},[o._v("#")]),o._v(" 2.1 NoSQL 简介")]),o._v(" "),_("blockquote",[_("p",[o._v("NoSQL，全称是”Not Only Sql”,指的是非关系型的数据库。这类数据库主要有这些特点：非关系型的、分布式的、开源的、水平可扩展的。原始的目的是为了大规模 web 应用，这场全新的数据库革命运动早期就有人提出，发展至 2009 年趋势越发高涨。NoSQL 的拥护者们提倡运用非关系型的数据存储，通常的应用如：模式自由、支持简易复制、简单的 API、最终的一致性（非 ACID）、大容量数据等。NoSQL 被我们用得最多的当数 key-value 存储，当然还有其他的文档型的、列存储、图型数据库、xml 数据库等。相对于目前铺天盖地的关系型数据库运用，这一概念无疑是一种全新思维的注入")])]),o._v(" "),_("h3",{attrs:{id:"_2-2-发展现状"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-发展现状"}},[o._v("#")]),o._v(" 2.2 发展现状")]),o._v(" "),_("blockquote",[_("p",[o._v("现今的计算机体系结构在数据存储方面要求应用架构具备庞大的水平扩展性，而NoSQL正在致力于改变这一现状。目前新浪微博的 Redis和 Google 的 Bigtable 以及 Amazon的 SimpleDB使用的就是 NoSQL 型数据库")])]),o._v(" "),_("blockquote",[_("p",[o._v("NoSQL 项目的名字上看不出什么相同之处，但是，它们通常在某些方面相同：它们可以处理超大量的数据")])]),o._v(" "),_("blockquote",[_("p",[o._v("这场革命目前仍然需要等待。NoSQL 对大型企业来说还不是主流，但是，一两年之后很可能就会变个样子。在 NoSQL 运动的最新一次聚会中，来自世界各地的 150 人挤满了 CBS Interactive\n的一间会议室。分享他们如何推翻缓慢而昂贵的关系数据库的暴政，怎样使用更有效和更便宜的方法来管理数据")])]),o._v(" "),_("blockquote",[_("p",[o._v("关系型数据库给你强加了太多东西。它们要你强行修改对象数据，以满足数据库系统的需要。在 NoSQL 拥护者们来看，基于 NoSQL 的数据库替代方案“只是给你所需要的”")])]),o._v(" "),_("h3",{attrs:{id:"_2-3-为什么是-nosql"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-为什么是-nosql"}},[o._v("#")]),o._v(" 2.3 为什么是 NoSQL")]),o._v(" "),_("p",[o._v("随着互联网 web2.0 网站的兴起，非关系型的数据库现在成了一个极其热门的新领域，非关系数据库产品的发展非常迅速，而传统的关系型数据库在应付 web2.0 网站，特别是超大规\n模和高并发的 SNS 类型的 web2.0 纯动态网站已经显得力不从心，"),_("strong",[o._v("暴露了很多难以克服的问题")]),o._v("，例如：")]),o._v(" "),_("ol",[_("li",[_("p",[_("strong",[o._v("High performance - 对数据库高并发读写的需求")])]),o._v(" "),_("p",[o._v("web2.0 网站要根据用户个性化信息来实时生成动态页面和提供动态信息，所以基本上无法使用动态页面静态化技术，因此数据库并发负载非常高，往往要达到每秒上万次读写请求")]),o._v(" "),_("p",[o._v("关系型数据库应付上万次 SQL 查询还勉强顶得住，但是应付上万次 SQL 写数据请求，硬盘IO 就已经无法承受了，其实对于普通的 BBS 网站，往往也存在对高并发写请求的需求")])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("Huge Storage - 对海量数据的高效率存储和访问的需求")])]),o._v(" "),_("p",[o._v("对于大型的 SNS 网站，每天用户产生海量的用户动态信息，以国外的 Friend feed 为例，一个月就达到了 2.5 亿条用户动态，对于关系数据库来说，在一张 2.5 亿条记录的表里面进行SQL 查询，效率是极其低下乃至不可忍受的。再例如大型 web 网站的用户登录系统，例如腾讯，盛大，动辄数以亿计的帐号，关系数据库也很难应付")])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("High Scalability&&HighAvailability-对数据库的高可扩展性和高可用性的需求")])]),o._v(" "),_("p",[o._v("在基于 web 的架构当中，数据库是最难进行横向扩展的，当一个应用系统的用户量和访问量与日俱增的时候，你的数据库却没有办法像 web server 和 app server 那样简单的通过添加")]),o._v(" "),_("p",[o._v("更多的硬件和服务节点来扩展性能和负载能力。对于很多需要提供 24 小时不间断服务的网站来说，对数据库系统进行升级和扩展是非常痛苦的事情，往往需要停机维护和数据迁移，可是停机维护随之带来的就是公司收入的减少")])])]),o._v(" "),_("p",[o._v("在上面提到的“三高”需求面前，关系数据库遇到了难以克服的障碍，而对于 web2.0 网站来说，关系数据库的很多主要特性却往往无用武之地，例如：")]),o._v(" "),_("ol",[_("li",[_("p",[_("strong",[o._v("数据库事务一致性需求")])]),o._v(" "),_("p",[o._v("很多 web 实时系统并不要求严格的数据库事务，对读一致性的要求很低，有些场合对写一致性要求也不高。因此数据库事务管理成了数据库高负载下一个沉重的负担")])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("数据库的写实时性和读实时性需求")])]),o._v(" "),_("p",[o._v("对关系数据库来说，插入一条数据之后立刻查询，是肯定可以读出来这条数据的，但是对于很多 web 应用来说，并不要求这么高的实时性")])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("对复杂的SQL查询，特别是多表关联查询的需求")])]),o._v(" "),_("p",[o._v("任何大数据量的 web 系统，都非常忌讳多个大表的关联查询，以及复杂的数据分析类型的复杂 SQL 报表查询，特别是 SNS 类型的网站，从需求以及产品设计角度，就避免了这种情\n况的产生。往往更多的只是单表的主键查询，以及单表的简单条件分页查询，SQL 的功能被极大的弱化了")])])]),o._v(" "),_("p",[o._v("因此，关系数据库在这些越来越多的应用场景下显得不那么合适了，为了解决这类问题的NoSQL 数据库应运而生。")]),o._v(" "),_("p",[o._v("NoSQL 是非关系型数据存储的广义定义。它打破了长久以来关系型数据库与 ACID 理论大一统的局面。NoSQL 数据存储不需要固定的表结构，通常也不存在连接操作。在大数据存取上具备关系型数据库无法比拟的性能优势，该概念在 2009 年初得到了广泛认同。 当今的应用体系结构需要数据存储在横向伸缩性上能够满足需求。而 NoSQL 存储就是为了实现这个需求。")]),o._v(" "),_("p",[o._v("Google 的 BigTable 与 Amazon 的 Dynamo 是非常成功的商业 NoSQL 实现。一些开源的 NoSQL 体系，如 Facebook的Cassandra，Apache的HBase，也得到了广泛认同。从这些NoSQL项目的名字上看不出什么相同之处：Hadoop、Voldemort、Dynomite，还有其它很多，但它们都有一个共同的特点，就是要改变大家对数据库在传统意义上的理解。")]),o._v(" "),_("h3",{attrs:{id:"_2-4-nosql-特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-nosql-特点"}},[o._v("#")]),o._v(" 2.4 NoSQL 特点")]),o._v(" "),_("ol",[_("li",[_("p",[_("strong",[o._v("它可以处理超大量的数据")])])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("它运行在便宜的 PC 服务器集群上 PC")])]),o._v(" "),_("p",[o._v("集群扩充起来非常方便并且成本很低，避免了传统商业数据库“sharding”操作的复杂性和成本。")])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("它击碎了性能瓶颈")])]),o._v(" "),_("p",[o._v("NoSQL 的支持者称，通过 NoSQL 架构可以省去将 Web 或 Java 应用和数据转换成 SQL 格式的时间，执行速度变得更快。“SQL并非适用于所有的程序代码”，对于那些繁重的重复操作的数据，SQL 值得花钱。但是当数据库结构非常简单时，SQL 可能没有太大用处")])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("它没有过多的操作")])]),o._v(" "),_("p",[o._v("虽然 NoSQL 的支持者也承认关系型数据库提供了无可比拟的功能集合，而且在数据完整性上也发挥绝对稳定，他们同时也表示，企业的具体需求可能没有那么复杂")])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("它的支持者源于社区")])]),o._v(" "),_("p",[o._v("因为 NoSQL 项目都是开源的，因此它们缺乏供应商提供的正式支持。这一点它们与大多数开源项目一样，不得不从社区中寻求支持")])])]),o._v(" "),_("h3",{attrs:{id:"_2-5-mongodb-特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-mongodb-特点"}},[o._v("#")]),o._v(" 2.5 MongoDB 特点")]),o._v(" "),_("p",[o._v("MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似 json 的 bjson 格式，因此可以存储比较复杂的数据类型。MongoDB 最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。它是一个面向集合的,模式自由的文档型数据库")]),o._v(" "),_("ol",[_("li",[_("p",[_("strong",[o._v("面向集合（Collenction-Orented）")])]),o._v(" "),_("p",[o._v("意思是数据被分组存储在数据集中， 被称为一个集合（Collenction)。每个集合在数据库中都有一个唯一的标识名，并且可以包含无限数目的文档。集合的概念类似关系型数据库里的表（table），不同的是它不需要定义任何模式（schema)")])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("模式自由（schema-free)")])]),o._v(" "),_("p",[o._v('意味着对于存储在 MongoDB 数据库中的文件，我们不需要知道它的任何结构定义。提了这么多次"无模式"或"模式自由"，它到是个什么概念呢？例如，下面两个记录可以存在于同一个集合里面： {"welcome" : "Beijing"} {"age" : 25}')])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("文档型")])]),o._v(" "),_("p",[o._v("意思是我们存储的数据是键-值对的集合,键是字符串,值可以是数据类型集合里的任意类型,包括数组和文档. 我们把这个数据格式称作 “BSON” 即 “Binary Serialized document Notation.”")])])]),o._v(" "),_("p",[_("strong",[o._v("下面将分别介绍 MongoDB 的特点、功能和适用场合")])]),o._v(" "),_("ol",[_("li",[_("p",[_("strong",[o._v("特点")])]),o._v(" "),_("ul",[_("li",[o._v("面向集合存储，易于存储对象类型的数据")]),o._v(" "),_("li",[o._v("模式自由")]),o._v(" "),_("li",[o._v("支持动态查询")]),o._v(" "),_("li",[o._v("支持完全索引，包含内部对象")]),o._v(" "),_("li",[o._v("支持查询")]),o._v(" "),_("li",[o._v("支持复制和故障恢复")]),o._v(" "),_("li",[o._v("使用高效的二进制数据存储，包括大型对象（如视频等）")]),o._v(" "),_("li",[o._v("自动处理碎片，以支持云计算层次的扩展性")]),o._v(" "),_("li",[o._v("支持 Python，PHP，Ruby，Java，C，C#，Javascript，Perl 及 C++语言的驱动程序，社区")]),o._v(" "),_("li",[o._v("中也提供了对 Erlang 及.NET 等平台的驱动程序")]),o._v(" "),_("li",[o._v("文件存储格式为 BSON（一种 JSON 的扩展）")]),o._v(" "),_("li",[o._v("可通过网络访问")])])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("功能")])]),o._v(" "),_("ul",[_("li",[_("p",[o._v("面向集合的存储：适合存储对象及 JSON 形式的数据")])]),o._v(" "),_("li",[_("p",[o._v("动态查询：MongoDB 支持丰富的查询表达式。查询指令使用 JSON 形式的标记，可轻易")])]),o._v(" "),_("li",[_("p",[o._v("查询文档中内嵌的对象及数组")])]),o._v(" "),_("li",[_("p",[o._v("完整的索引支持：包括文档内嵌对象及数组。MongoDB 的查询优化器会分析查询表达式，并生成一个高效的查询计划")])]),o._v(" "),_("li",[_("p",[o._v("查询监视：MongoDB 包含一系列监视工具用于分析数据库操作的性能")])]),o._v(" "),_("li",[_("p",[o._v("复制及自动故障转移：MongoDB 数据库支持服务器之间的数据复制，支持主-从模式及")])]),o._v(" "),_("li",[_("p",[o._v("服务器之间的相互复制。复制的主要目标是提供冗余及自动故障转移")])]),o._v(" "),_("li",[_("p",[o._v("高效的传统存储方式：支持二进制数据及大型对象（如照片或图片）")])]),o._v(" "),_("li",[_("p",[o._v("自动分片以支持云级别的伸缩性：自动分片功能支持水平的数据库集群，可动态添加额外的机器")])])])]),o._v(" "),_("li",[_("p",[_("strong",[o._v("适用场合")])]),o._v(" "),_("ul",[_("li",[o._v("网站数据：MongoDB 非常适合实时的插入，更新与查询，并具备网站实时数据存储所需的复制及高度伸缩性")]),o._v(" "),_("li",[o._v("缓存：由于性能很高，MongoDB 也适合作为信息基础设施的缓存层。在系统重启之后，由 MongoDB 搭建的持久化缓存层可以避免下层的数据源过载")]),o._v(" "),_("li",[o._v("大尺寸，低价值的数据：使用传统的关系型数据库存储一些数据时可能会比较昂贵，在此之前，很多时候程序员往往会选择传统的文件进行存储")]),o._v(" "),_("li",[o._v("高伸缩性的场景：MongoDB 非常适合由数十或数百台服务器组成的数据库。MongoDB的路线图中已经包含对 MapReduce 引擎的内置支持")]),o._v(" "),_("li",[o._v("用于对象及 JSON 数据的存储：MongoDB 的 BSON 数据格式非常适合文档化格式的存储及查询")])])])]),o._v(" "),_("h2",{attrs:{id:"_3-mongodb-下载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-mongodb-下载"}},[o._v("#")]),o._v(" 3. MongoDB 下载")]),o._v(" "),_("p",[_("a",{attrs:{href:"https://www.mongodb.com/download-center#community",target:"_blank",rel:"noopener noreferrer"}},[o._v("mongodb官网"),_("OutboundLink")],1)]),o._v(" "),_("p",[o._v("https://www.mongodb.com/download-center#community")]),o._v(" "),_("p",[o._v("https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-3.0.6-signed.msi")]),o._v(" "),_("h2",{attrs:{id:"_4-mongodb-gui工具"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-mongodb-gui工具"}},[o._v("#")]),o._v(" 4. MongoDB GUI工具")]),o._v(" "),_("ul",[_("li",[o._v("Fang of Mongo – 网页式,由Django和jQuery所构成")]),o._v(" "),_("li",[o._v("Futon4Mongo – 一个CouchDB Futon web的mongodb山寨版")]),o._v(" "),_("li",[o._v("Mongo3 – Ruby写成")]),o._v(" "),_("li",[o._v("MongoHub – 适用于OSX的应用程序")]),o._v(" "),_("li",[o._v("Opricot – 一个基于浏览器的MongoDB控制台, 由PHP撰写而成")]),o._v(" "),_("li",[o._v("Database Master — Windows的mongodb管理工具")]),o._v(" "),_("li",[o._v("RockMongo — 最好的PHP语言的MongoDB管理工具，轻量级, 支持多国语言")])])])}),[],!1,null,null,null);_.default=t.exports}}]);